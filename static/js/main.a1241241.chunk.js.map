{"version":3,"sources":["pages/components/Introduction/Introduction.tsx","pages/components/SectionTitle/SectionTitle.tsx","pages/components/StarRating/Rating.tsx","pages/components/TechTile/TechTile.tsx","pages/components/Projects/Project.tsx","pages/components/Education/Education.tsx","pages/components/Blog/BlogEntry.tsx","pages/components/Blog/Blog.tsx","pages/components/CodeFight/CodeItem.tsx","pages/components/CodeFight/CodeFight.tsx","pages/components/GitHub/GitHub.tsx","pages/components/Principles/PrincipleItem.tsx","pages/components/Principles/Principles.tsx","pages/components/Footer/Footer.tsx","pages/components/ScrollArrows/ScrollArrows.tsx","pages/Home.tsx","App.js","serviceWorker.js","index.js"],"names":["Introduction","props","className","classname","id","name","message","SectionTitle","label","section_id","Math","random","toString","substring","Rating","starIcon","icon","faStar","ratingMax","rating","stars","i","star","push","TechTile","src","showRating","size","tooltip","ratingJSX","renderedLabel","OverlayTrigger","key","placement","overlay","Tooltip","alt","Project","title","role","date","imageSrc","company","companyLogo","techStack","children","buildTechStack","techStackArray","length","Education","faGraduationCap","BlogEntry","url","imgSrc","href","target","Blog","img-src","CodeItem","CodeFight","image-src","GitHub","PrincipleItem","backgroundColor","color","innerhtml","__html","style","dangerouslySetInnerHTML","Principles","background-color","Footer","ScrollArrows","getHash","prev","next","anchors","output","document","getElementsByClassName","anchor","getAnchors","hash","window","location","replace","hash_index","indexOf","curr","onClick","console","log","faChevronUp","faChevronDown","Home","tech-stack","App","path","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.a1241241.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.scss\";\nimport classname from \"classnames\";\n\nexport const Introduction =(props:{name:string, message:string, className?:string, id?:string})=>{\n    return(\n        <div className={classname(\"introduction\",props.className)} id={props.id}>\n            <div className=\"inner\">\n                <div className=\"greeting\">Hi, I'm</div>\n                <div className=\"name\">{props.name}</div>\n                <div className=\"message\">{props.message}</div>\n\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport \"./style.scss\";\nimport classname from \"classnames\";\n\nexport const SectionTitle = (props:any) => {\n    const {label, id, className} = props;\n\n    const section_id = id ? id : Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n    \n    return (\n        <div className={classname(\"section-title anchor\",className)} id={section_id}>\n            <div className=\"inner\">\n                {label}\n            </div>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faStar} from '@fortawesome/free-solid-svg-icons';\nimport \"./style.scss\";\n\nexport const Rating = (props:{rating:number, ratingMax?:number}) => {\n    const starIcon = <FontAwesomeIcon icon={faStar} />\n\n    const ratingMax = props.ratingMax || 5;\n    const rating = props.rating || 0;\n    let stars =[];\n    for(let i=1; i < (ratingMax+1); i++){\n        const star = <span className={`fa fa-star ${(i <= rating)?\"checked\":\"unchecked\"}`}>{starIcon}</span>;\n        stars.push(star);\n    }\n    return <div className=\"star-rating-container\">{stars}</div>;\n}","import React from \"react\";\nimport \"./style.scss\";\nimport {Rating} from \"../StarRating/Rating\";\nimport {OverlayTrigger,Tooltip } from 'react-bootstrap';\n\nexport const TechTile = (props:{src:string, label?:string, tooltip?:string, rating?:number, showRating?:boolean, size?:string}) =>{\n    const {src, label, rating, showRating=true, size=\"normal\", tooltip = false} = props;\n    const ratingJSX = showRating && rating? \n                <div className=\"tech-tile-knowledge-level\">\n                    <Rating rating={rating}/>\n                </div>\n                :\n                \"\";\n\n    const renderedLabel = label ? <div className=\"tech-tile-label\">{label}</div> : \"\";\n    return (\n        tooltip ? \n        <div className={`tech-tile ` + size}>\n            <div className=\"tech-tile-image\">\n            <OverlayTrigger\n                key=\"bottom\"\n                placement=\"bottom\"\n                overlay={\n                <Tooltip id={`tooltip-bottom`}>\n                    {tooltip}\n                </Tooltip>\n                }\n            > \n               <img src={src} alt={label} className=\"pointer\"/>\n            </OverlayTrigger>\n            </div>\n            {renderedLabel}\n            {ratingJSX}\n        </div>\n        :\n        <div className={`tech-tile ` + size}>\n            <div className=\"tech-tile-image\">\n               <img src={src} alt={label}/>\n            </div>\n            {renderedLabel}\n            {ratingJSX}\n        </div>       \n    )\n}","import React from \"react\";\nimport {TechTile} from \"../TechTile/TechTile\";\nimport \"./style.scss\";\n\nexport const Project =(props:any)=>{\n    const {title, role, date, \"image-src\":imageSrc,company, companyLogo, \"tech-stack\":techStack=[], children} = props;\n\n\n    return(\n        <div className=\"project-container\">\n            <div className=\"project-image-tech d-xs-none\">\n                <div className=\"project-image\">\n                    <img src={imageSrc}/>\n                </div>\n            </div>\n            <div className=\"project-description\">\n                <div className=\"project-description-title\">{title}</div>\n                <div className=\"project-description-role\">{role}, {date}</div>\n                <div className=\"project-description-company\">{company}</div>\n                {buildTechStack(techStack)}\n                <div className=\"project-description-description\">{children}</div>\n\n            </div>\n        </div>\n    )\n}\n\nconst buildTechStack =(techStack:[{src:string,label?:string, tooltip?:string}])=>{\n    const techStackArray = [];\n    for(let i=0; i < techStack.length; i++){\n        techStackArray.push(<TechTile key={i} src={techStack[i].src} label={techStack[i].label} tooltip={techStack[i].tooltip} size=\"x-small\"/>);\n    }\n    const techStackContainer = techStackArray.length > 0 ? \n    <div>\n        <div className=\"tech-stack\">Tech Stack:</div>\n        <div className=\"project-tech\">\n            {techStackArray}\n        </div>  \n    </div> : \"\";\n    return techStackContainer;\n}","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faGraduationCap} from '@fortawesome/free-solid-svg-icons';\nimport \"./style.scss\";\nimport classname from \"classnames\";\n\nexport const Education = (props:any) =>{\n    const {id, className} = props;\n    return (\n        <div className={classname(\"education-container\", className)} id={id}>\n            <div className=\"education-primary\">\n                <FontAwesomeIcon icon={faGraduationCap} />\n                <span>Bachelors of Computer Engineering, <i>4.0 GPA</i></span>\n            </div>\n            <div className=\"education-secondary\">\n                and I can speak <b>Portuguese</b> and <b>English</b> fluently\n            </div>\n        </div>\n    )\n\n}","import React from \"react\";\nimport \"./style.scss\";\nimport classname from \"classnames\";\n\nexport const BlogEntry = (props:any) =>{\n    const {url,title, \"img-src\":imgSrc} = props;\n    return (\n        <a href={url} target=\"_blank\" className={classname(\"blog-entry\", props.className)}>\n            <img className=\"blog-entry-img\" src={imgSrc}/>\n            <div className=\"blog-entry-text\">{title}</div>\n        </a>\n    )\n}","import React from \"react\";\nimport \"./style.scss\";\nimport classname from \"classnames\";\nimport {BlogEntry} from \"./BlogEntry\";\nexport const Blog = (props:any) =>{\n\n    return (\n        <div className={classname(\"blog-container\",props.className)}>\n            <div className={classname(\"blog-blurp\")}>\n                From time to time I like to write a couple of articles on LinkedIn highlighting something about my day-to-day and what it is to be a full stack developer in todays industry. Here are a few of the posts i have published... \n            </div>\n            <div className=\"blog-list-container flex-container\">\n                <BlogEntry title=\"I don't have time for that\" url=\"https://www.linkedin.com/pulse/i-dont-have-time-fabio-almeida/\" img-src=\"./blog-images/idonthavetime.jpg\" className=\"col-sm-4 col-xs-12\"/>\n                <BlogEntry title=\"A Wednesday in Full Stack Dev\" url=\"https://www.linkedin.com/pulse/from-crazy-nearly-perfect-wednesday-full-stack-fabio-almeida/\" img-src=\"./blog-images/theprocess.jpg\" className=\"col-sm-4 col-xs-12\"/>\n                <BlogEntry title=\"The Process\" url=\"#\" img-src=\"./blog-images/theprocess2.jpeg\" className=\"col-sm-4 col-xs-12\"/>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport classname from \"classnames\";\nimport \"./style.scss\";\n\nexport const CodeItem = (props:any) => {\n    const {title, \"image-src\":imgSrc, children} = props;\n    return (\n            <div className={classname(\"code-container\")}>\n                <div className={classname(\"code-description-container\")}>\n                    <h3>{title}</h3>\n                    {children}\n                </div>\n                <div className={classname(\"code-snippet-container\")}>\n                    <a href={imgSrc} target=\"blank\">\n                        <img src={imgSrc} className=\"code-image\"/>\n                        <img src=\"./click-me.png\" className=\"click-me-code\"/>\n                    </a>\n                </div>\n            </div>\n    )\n}","import React from \"react\";\nimport \"./style.scss\";\nimport classname from \"classnames\";\nimport {CodeItem} from \"./CodeItem\";\nexport const CodeFight = (props:any) =>{\n\n    return(\n        <div className={classname(\"codefight-outer-container\", props.className)}>\n            <div className={classname(\"codefight-blurp\")}>\n                <p>During my time off I like to spend a few minutes (or hours) over at <a href=\"https://app.codesignal.com/profile/fabioalmeida\" target=\"_blank\" className=\"link\">codesignal.com</a> working on my coding skills to stay sharp on my critical thinking while solving real world problems with computer programming. Here are a few of my solutions:</p>\n            </div>\n\n            <CodeItem title=\"All Longest Strings\" image-src=\"./codesignal-solutions/longestStrings.png\">\n                Given an array of strings, return another array containing all of its longest strings\n                <h5>Example</h5>\n                For inputArray = [\"aba\", \"aa\", \"ad\", \"vcd\", \"aba\"], the output should be allLongestStrings(inputArray) = [\"aba\", \"vcd\", \"aba\"].               \n            </CodeItem>\n\n            <CodeItem title=\"Almost Increasing Sequence\" image-src=\"./codesignal-solutions/almostIncreasing.png\">\n                Given a sequence of integers as an array, determine whether it is possible to obtain a strictly increasing sequence by removing no more than one element from the array.Note: sequence a0, a1, ..., an is considered to be a strictly increasing if a0 &lt; a1 &lt; ... &lt; an. Sequence containing only one element is also considered to be strictly increasing.\n            </CodeItem>\n \n            <CodeItem title=\"Shape Area\" image-src=\"./codesignal-solutions/shapeArea.png\">\n            Below we will define an n-interesting polygon. Your task is to find the area of a polygon for a given n.\n\nA 1-interesting polygon is just a square with a side of length 1. An n-interesting polygon is obtained by taking the n - 1-interesting polygon and appending 1-interesting polygons to its rim, side by side. You can see the 1-, 2-, 3- and 4-interesting polygons in the picture below.\n            </CodeItem>\n             \n \n        </div>\n    )\n}","import React from \"react\";\nimport classname from \"classnames\";\n\nimport \"./style.scss\";\nimport { TechTile } from \"../TechTile/TechTile\";\n\nexport const GitHub = (props:any) =>{\n    return (\n        <div className={classname(\"github-container\", props.className)}>\n            <TechTile src=\"./logos/github.png\" label=\"GitHub\"/>\n            \n            <div className=\"github-description\">\n                <p>This single page web app took me <b>6.5 hours</b> to create from scratch. All code and components here were thought, organized and typed by me</p>\n                <p>This <b>entire</b> source code is publicly available on github for you to take a look at. </p>\n                <p>And while you are there, let me know what you think of the <b>code organization, reusability and commenting</b></p>\n                <a href=\"https://github.com/212070170/portifolio\" target=\"_blank\">View code on github</a>\n                </div>\n        </div>\n    )\n}","import React from \"react\";\nimport classname from \"classnames\";\nimport \"./style.scss\";\n\nexport const PrincipleItem = (props:{children?:any, \"background-color\":string, color?:string, label:string, className?:string}) =>{\n    const {children, \"background-color\":backgroundColor,color=\"#fff\",label, className} = props;\n    const innerhtml = {__html:label};\n    return (\n        <div className={classname(\"principles-item\", className)} style={{backgroundColor, color}} dangerouslySetInnerHTML={innerhtml}>\n        </div>\n    )\n}","import React from \"react\";\nimport classname from \"classnames\";\nimport \"./style.scss\";\nimport { PrincipleItem } from \"./PrincipleItem\";\n\nexport const Principles = (props:{children?:any, className?:string}) =>{\n\n    return (\n        <div className={classname(\"principles-container\", props.className)}>\n            <PrincipleItem background-color=\"#F65\" label=\"Nothing is impossible <small>we just haven't found a way to do it yet!\" color=\"#FFF\" />\n            <PrincipleItem background-color=\"#369\" label=\"Why > What\" />\n            <PrincipleItem background-color=\"#777\" label=\"First things first\"/>\n            <PrincipleItem background-color=\"#fce00a\" label=\"YOU &ne; USER\" color=\"#000\"/>\n            <PrincipleItem background-color=\"#6bd600\" label=\"Always leave your code better than how you found it\"/>\n        </div>\n    )\n}","import React from \"react\";\nimport classname from \"classnames\";\nimport {TechTile} from \"../TechTile/TechTile\";\n\nimport \"./style.scss\";\n\nexport const Footer = (props:{children?:any, className?:string}) => {\n    const{children, className} = props;\n    return (\n        <div className={classname(\"footer\", className)}>\n            <div>\n                Lets connect. I prefer <b>emails</b> and <b>linedIn messages</b>.\n            </div>\n            <div className=\"footer-social-media-container\">\n            <a href=\"mailto: fabiokpoeira@gmail.com\" target=\"_blank\" className=\"footer-tile\">\n                    <TechTile src=\"./logos/email.png\" size=\"small\"/>\n                </a>\n               <a href=\"https://www.linkedin.com/in/almeidafabio/\" target=\"_blank\" className=\"footer-tile\">\n                    <TechTile src=\"./logos/linkedin.png\" size=\"small\"/>\n                </a>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport classname from \"classnames\";\nimport \"./style.scss\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faChevronUp, faChevronDown} from '@fortawesome/free-solid-svg-icons';\nexport const ScrollArrows = (props:any) =>{\n    const getAnchors = () => {\n        // Get all the anchor points in a page marked with the class anchor\n        let output = [];\n        const anchors = document.getElementsByClassName(\"anchor\");\n        for(let anchor in anchors){\n            const id = anchors[anchor].id;\n            if(id) output.push(anchors[anchor].id);\n        }\n        return output;\n    };\n\n    const getHash = () => {\n        // Get the hash # from the url and finds out which anchor point is the previous and the next in the array\n        const anchors = getAnchors();\n        const hash = window.location.hash.replace(\"#\",\"\");\n        const hash_index = anchors.indexOf(hash);\n        let prev, next;\n        if(hash_index == 0) {\n            // prev = hash_index;\n            prev = anchors.length-1;\n\n        }else{\n            prev = hash_index - 1;\n        }\n\n        if(hash_index == (anchors.length - 1)){\n            // next = hash_index;\n            next = 0;\n\n        }else{\n            next = hash_index + 1;\n        }\n\n        return {\n            prev:hash ? anchors[prev] : anchors[0],\n            curr: hash ? hash : anchors[0],\n            next:hash ? anchors[next] : anchors[0]\n        };\n    }\n\n    const goToPrevious = () => {\n        window.location.href = \"#\"+getHash().prev;\n        console.log(getHash())\n    }\n\n    const goToNext = () => {\n        window.location.href = \"#\"+getHash().next;\n        console.log(getHash())\n    }\n    return (\n        <div className={classname(\"scroll-arrow-container\")}>\n            <div className={classname(\"scroll-arrow\")} onClick={goToPrevious}>\n                <FontAwesomeIcon icon={faChevronUp} />\n            </div>\n            <div className={classname(\"scroll-arrow\")}  onClick={goToNext}>\n                <FontAwesomeIcon icon={faChevronDown} />\n            </div>\n            \n        </div>\n    )\n}","import React from 'react';\nimport Button from 'react-bootstrap/Button';\n\n// Components\nimport {Introduction} from \"./components/Introduction/Introduction\";\nimport {SectionTitle} from \"./components/SectionTitle/SectionTitle\";\nimport {TechTile} from \"./components/TechTile/TechTile\";\nimport {Project} from \"./components/Projects/Project\";\nimport {Education} from \"./components/Education/Education\";\nimport {Blog} from \"./components/Blog/Blog\";\nimport {CodeFight} from \"./components/CodeFight/CodeFight\";\nimport { GitHub } from './components/GitHub/GitHub';\nimport { Principles } from './components/Principles/Principles';\nimport { Footer } from './components/Footer/Footer';\nimport { ScrollArrows } from './components/ScrollArrows/ScrollArrows';\nexport const Home = () => {\n    return(\n        <div className=\"main\" >\n            <Introduction name=\"Fabio Almeida\" message=\"a full stack software developer\" className=\"anchor\" id=\"introduction\"/>\n            <div className=\"main-container container-fluid\">\n                <Education id=\"what_i_know\" className=\"anchor\"/>\n                \n                <SectionTitle label=\"Here's what i know\"/>\n                <div className=\"flex-container inline-flex center\">\n                    <TechTile src=\"./logos/javascript.png\" label=\"Javascript\" rating={5}/>\n                    <TechTile src=\"./logos/typescript.png\" label=\"Typescript\" rating={5}/>\n                    <TechTile src=\"./logos/react.png\" label=\"ReactJS\" rating={5}/>\n                    <TechTile src=\"./logos/nodejs.png\" label=\"NodeJS\" rating={5}/>\n\n                    <TechTile src=\"./logos/java.png\" label=\"Java\" rating={4}/>\n                    <TechTile src=\"./logos/html5.png\" label=\"HTML 5\" rating={5}/>\n                    <TechTile src=\"./logos/css3.png\" label=\"CSS 3\" rating={5}/>\n                </div>\n\n                <SectionTitle label=\"And I also know these\"/>\n                <div className=\"flex-container inline-flex center\">\n                    <TechTile src=\"./logos/spark.png\" label=\"Apache Spark\" size=\"small\"/>\n                    <TechTile src=\"./logos/angular.png\" label=\"Angular\" size=\"small\"/>\n                    <TechTile src=\"./logos/python.png\" label=\"Python\" size=\"small\"/>\n                    <TechTile src=\"./logos/solr.png\" label=\"Apache Solr\" size=\"small\"/>\n                    <TechTile src=\"./logos/oracle.png\" label=\"Oracle\" size=\"small\"/>\n                    <TechTile src=\"./logos/sql.png\" label=\"SQL\" size=\"small\"/>\n                    <TechTile src=\"./logos/mongodb.png\" label=\"mongo DB\" size=\"small\"/>\n                    <TechTile src=\"./logos/maven.png\" label=\"Apache Maven\" size=\"small\"/>\n                </div>\n\n\n                <div className=\"container-fluid highlighted\">\n                    <SectionTitle label=\"It's all about Principles\"/>\n                        <Principles className=\"col-sm-8 col-xs-12 center-horizontally\" />\n                </div>\n\n                <SectionTitle label=\"Here are a few projects I've worked on\" id=\"projects\"/>\n                <div className=\"col-sm-9 center\" >\n                    <Project \n                        title=\"Component Library\" \n                        company=\"GE Healthcare, CDx\"\n                        image-src=\"./project-images/component-library.png\" \n                        date=\"Since May 2019\" \n                        role=\"Front-End Software Engineer\"\n                        tech-stack={\n                            [\n                                {tooltip:\"Typescript\",src:\"./logos/typescript.png\"},\n                                {tooltip:\"Javascript\",src:\"./logos/javascript.png\"},\n                                {tooltip:\"ReactJS\",src:\"./logos/react.png\"},\n                                {tooltip:\"CSS3\",src:\"./logos/css3.png\"},\n                                {tooltip:\"HTML\",src:\"./logos/html5.png\"},\n                            ]}>\n                        <p>A project targeting to develop and deliver a ready-to-use library of UI components, leveraging GEHC CDx's design system. These components are used by front end developers to create high fidelity UI and UX as outlined by the User Experience team</p>\n                    </Project>\n \n \n                    <Project \n                        title=\"SmartTriage\" \n                        role=\"Full Stack Software Engineer\"\n                        date=\"September 2016 - May 2019\" \n                        company=\"GE Healthcare, Global Services Technology\"\n                        image-src=\"./project-images/smarttriage.jpg\" \n                        tech-stack={\n                            [\n                                {tooltip:\"Python\",src:\"./logos/python.png\"},\n                                {tooltip:\"Solr\",src:\"./logos/solr.png\"},\n                                {tooltip:\"Spark\",src:\"./logos/spark.png\"},\n                                {tooltip:\"Javascript\",src:\"./logos/javascript.png\"},\n                                {tooltip:\"Angular\",src:\"./logos/angular.png\"},\n                                {tooltip:\"CSS3\",src:\"./logos/css3.png\"},\n                                {tooltip:\"HTML\",src:\"./logos/html5.png\"},\n                                {tooltip:\"Java\",src:\"./logos/java.png\"},\n                                {tooltip:\"MongoDB\",src:\"./logos/mongodb.png\"},\n                            ]}>\n                        <p>A project targeting to develop and deliver a ready-to-use library of UI components, leveraging GEHC CDx's design system. These components are used by front end developers to create high fidelity UI and UX as outlined by the User Experience team</p>\n                    </Project>\n                    \n                    \n                    <Project \n                        title=\"Find an Expert\" \n                        company=\"GE Healthcare, Global Services Technology\"\n                        image-src=\"./project-images/fae.jpg\" \n                        date=\"March 2016 - September 2016\" \n                        role=\"Full Stack Software Engineer\"\n                        tech-stack={\n                            [\n                                {tooltip:\"Java\",src:\"./logos/java.png\"},\n                                {tooltip:\"Angular\",src:\"./logos/angular.png\"},\n                                {tooltip:\"CSS3\",src:\"./logos/css3.png\"},\n                                {tooltip:\"HTML\",src:\"./logos/html5.png\"},\n                                {tooltip:\"OracleDB\",src:\"./logos/oracle.png\"},\n                            ]}>\n                        <p>A project targeting to develop and deliver a ready-to-use library of UI components, leveraging GEHC CDx's design system. These components are used by front end developers to create high fidelity UI and UX as outlined by the User Experience team</p>\n                    </Project>\n                    \n                    \n                    <Project \n                        title=\"SynerGE CRM\" \n                        company=\"GE Healthcare, Global Services Technology\"\n                        image-src=\"./project-images/synerge.png\" \n                        date=\"March 2015 - September 2016\" \n                        role=\"Front-End Software Engineer\"\n                        tech-stack={\n                            [\n                                {tooltip:\"Angular\",src:\"./logos/angular.png\"},\n                                {tooltip:\"Javascript\",src:\"./logos/javascript.png\"},\n                                {tooltip:\"HTML\",src:\"./logos/html5.png\"},\n                                {tooltip:\"CSS\",src:\"./logos/css3.png\"},\n                                {tooltip:\"Java\",src:\"./logos/java.png\"},\n                                {tooltip:\"OracleDB\",src:\"./logos/oracle.png\"},\n                            ]}>\n                        <p>A project targeting to develop and deliver a ready-to-use library of UI components, leveraging GEHC CDx's design system. These components are used by front end developers to create high fidelity UI and UX as outlined by the User Experience team</p>\n                    </Project>\n                    \n                    \n                    <Project \n                        title=\"FE Homepage\" \n                        company=\"GE Healthcare, Americas\"\n                        image-src=\"./project-images/fehomepage.jpg\" \n                        date=\"November 2012 - April 2015\" \n                        role=\"Front-End Software Engineer\"\n                        tech-stack={\n                            [\n                                {tooltip:\"HTML\",src:\"./logos/html5.png\"},\n                                {tooltip:\"CSS3\",src:\"./logos/css3.png\"},\n                                {tooltip:\"Javascript\",src:\"./logos/javascript.png\"},\n                                {tooltip:\"Java\",src:\"./logos/java.png\"},\n                                {tooltip:\"Oracle\",src:\"./logos/oracle.png\"},\n                            ]}>\n                        <p>A project targeting to develop and deliver a ready-to-use library of UI components, leveraging GEHC CDx's design system. These components are used by front end developers to create high fidelity UI and UX as outlined by the User Experience team</p>\n                    </Project>\n               </div>\n\n               <div className=\"container-fluid highlighted\">\n                    <SectionTitle label=\"Take a look at this code on GitHub </> \" id=\"github\"/>\n                    <GitHub  className=\"col-sm-8 col-xs-12 center-horizontally\"/>\n                </div>\n\n               <SectionTitle label=\"Passionate about problem solving\"/>\n               <CodeFight className=\"col-sm-8 col-xs-12 center-horizontally\"/>\n\n               <SectionTitle label=\"Get into my brain\" id=\"aboutme\"/>\n               <Blog className=\"col-sm-8 center center-horizontally\"></Blog>\n               \n               \n               <SectionTitle label=\"My timeline in a snapshot\" id=\"timeline\"/>\n                <img src=\"./timeline-2.jpg\" className=\"col-sm-8 col-xs-12 center-horizontally\"/>\n                <div className=\"col-sm-8 col-xs-12 center-horizontally timeline\">\n                    <p>In <b>1999</b> I built my first website on a pentium I computer, using just html and adobe Flash. In <b>2000</b> I started college for software development.</p>\n                    <p>In <b>2002</b> I left Brazil with $400 in my pocket to live in New York. The next seven years i worked in construction, newspaper, graphic designer and taught martial arts. In <b>2009</b> I went back to college for Computer Engineering and at the end of <b>2011</b> I landed an internship with General Electric as a Field Service Engineer</p>\n                    <p>In <b>2012</b> I Transfered from Field Services to become a developer for GEHC USCAN (US, Canada and Mexico). <b>2014</b> I was transfering to become a full stack developer for GEHC GST (Global Services Technology).</p>\n                    <p>After 5 years in GST, and many different roles, in <b>2019</b> I joined the CDx team as a Full Stack software engineer.</p>\n                </div>\n\n               <Footer className=\"col-sm-8 com-xs-12 center center-horizontally\"/>\n               <ScrollArrows/>\n            </div>\n\n        </div>\n    )\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport './App.scss';\n\n// Pages\nimport {Home} from './pages/Home.tsx';\n\nfunction App() {\n  return (\n    <Router>\n    <div>\n      <nav className=\"navigation-bar\">\n        <ul>\n          <li>\n            <a href=\"#what_i_know\">What I know</a>\n          </li>\n          <li>\n          <a href=\"#projects\">Projects</a>\n          </li>\n          <li>\n          <a href=\"#github\">GitHub</a>\n          </li>\n          <li>\n          <a href=\"#aboutme\">About Me</a>\n          </li>\n          <li>\n          <a href=\"#timeline\">Timeline</a>\n          </li>\n        </ul>\n      </nav>\n\n      {/* A <Switch> looks through its children <Route>s and\n          renders the first one that matches the current URL. */}\n      <Switch>\n        <Route path=\"/about\">\n          <Home />\n        </Route>\n        <Route path=\"/users\">\n          <Home />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </div>\n  </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}